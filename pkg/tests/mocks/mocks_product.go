// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/product_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIProductInterface is a mock of IProductInterface interface
type MockIProductInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIProductInterfaceMockRecorder
}

// MockIProductInterfaceMockRecorder is the mock recorder for MockIProductInterface
type MockIProductInterfaceMockRecorder struct {
	mock *MockIProductInterface
}

// NewMockIProductInterface creates a new mock instance
func NewMockIProductInterface(ctrl *gomock.Controller) *MockIProductInterface {
	mock := &MockIProductInterface{ctrl: ctrl}
	mock.recorder = &MockIProductInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIProductInterface) EXPECT() *MockIProductInterfaceMockRecorder {
	return m.recorder
}

// AddProduct mocks base method
func (m *MockIProductInterface) AddProduct(arg0, arg1 string, arg2 float32) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProduct", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	return ret0
}

// AddProduct indicates an expected call of AddProduct
func (mr *MockIProductInterfaceMockRecorder) AddProduct(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProduct", reflect.TypeOf((*MockIProductInterface)(nil).AddProduct), arg0, arg1, arg2)
}

// UpdateProduct mocks base method
func (m *MockIProductInterface) UpdateProduct(arg0 int, arg1, arg2 string, arg3 float32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateProduct", arg0, arg1, arg2, arg3)
}

// UpdateProduct indicates an expected call of UpdateProduct
func (mr *MockIProductInterfaceMockRecorder) UpdateProduct(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProduct", reflect.TypeOf((*MockIProductInterface)(nil).UpdateProduct), arg0, arg1, arg2, arg3)
}

// DeleteProduct mocks base method
func (m *MockIProductInterface) DeleteProduct(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteProduct", arg0)
}

// DeleteProduct indicates an expected call of DeleteProduct
func (mr *MockIProductInterfaceMockRecorder) DeleteProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProduct", reflect.TypeOf((*MockIProductInterface)(nil).DeleteProduct), arg0)
}
